@model StudentInfo.WebClient.Models.RegisterViewModel
@using StudentInfo.Enums
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.Role, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Role, StudentInfo.WebClient.Helpers.FieldInputHelpers.GetRoles(),
                new { id = "roleDropdown", @class = "form-control", onchange = "checkHiddenLists()" })
        </div>
    </div>
    <div id="facultiesDiv" class="form-group" style="display: none">
        @Html.Label("Faculties", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => x.FacultyId, StudentInfo.WebClient.Helpers.FieldInputHelpers.GetSchoolFaculties(),
                new { id = "facultiesDropdown", @class = "form-control" })
        </div>
    </div>
    <div id="departmentDiv" class="form-group" style="display: none">
        @Html.Label("Department", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("Departments", StudentInfo.WebClient.Helpers.FieldInputHelpers.GetSchoolDepartments(),
                new { id = "departmentDropdown", @class = "form-control", onchange = "updatePrograms()" })
        </div>
    </div>
    <div id="programDiv" class="form-group" style="display: none">
        @Html.LabelFor(m => m.ProgramId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.ProgramId, new List<SelectListItem>(),
                new { id = "programDropdown", @class = "form-control" })
        </div>
    </div>
    <div id="startingTerm" class="form-group" style="display: none">
        @Html.LabelFor(x => x.Term, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(x => x.Term, new { @class = "form-control" })
        </div>
    </div>
    <div id="startingYear" class="form-group" style="display: none">
        @Html.LabelFor(x => x.Year, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Year, new { id = "startingYearInput", @class = "form-control" })
        </div>
    </div>
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.MiddleName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Create" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(checkHiddenLists());

    function displayStudentLists(show) {
        if (show) {
            $("#departmentDiv").show();
            $("#programDiv").show();
            $("#startingTerm").show();
            $("#startingYear").show();
        }
        else {
            $("#departmentDiv").hide();
            $("#programDiv").hide();
            $("#startingTerm").hide();
            $("#startingYear").hide();
        }
    }

    function displayFacultiesList(show) {
        if (show) {
            $("#facultiesDiv").show();
        }
        else {
            $("#facultiesDiv").hide();
        }
    }


    function checkHiddenLists() {
        if ($("#roleDropdown").find(":selected").val() === "Student") {
            displayStudentLists(true);
        }
        else if ($("#roleDropdown").find(":selected").val() === "Advisor") {
            displayStudentLists(false);
            displayFacultiesList(true);
        }
        else {
            displayStudentLists(false);
            displayFacultiesList(false);
        }
    }

    function updatePrograms() {
        $("#programDropdown").empty();
        var departmentId = $("#departmentDropdown").find(":selected").val();

        $.ajax({
            type: "GET",
            url: "/Course/GetPrograms",
            data: { departmentId: departmentId },
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    $("#programDropdown").append('<option value = "' + data[i].value + '">' + data[i].text + '</option>');
                }
            }
        });
    }
</script>