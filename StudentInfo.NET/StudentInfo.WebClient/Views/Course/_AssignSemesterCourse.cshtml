@model StudentInfo.WebClient.Models.AssignSemesterCourseModel
@using StudentInfo.WebClient.Helpers   

@{
    Layout = "";
}

<div class="modal-header modal-lg">
    <h4 class="modal-title">@Model.Course.Code - @Model.Course.Name</h4>
</div>

<div class="modal-body modal-lg">
    <div class="row">

            @*@if (Model.SemesterCourse == null || !Model.SemesterCourse.Any())
            {
                @Html.Label("Empty", "Never assigned before")
            }
            else
            {
                <table class="table">
                    <tr>
                        <td>Term</td>
                        <td>Year</td>
                        <td>Instructor</td>
                        <td>Classroom</td>
                    </tr>
                    @foreach (var item in Model.SemesterCourse)
                    {
                    <tr>
                        <td>@item.Term</td>
                        <td>@item.CourseDate.Year</td>
                        @{ 
                            var teacherName = "TBD";
                            if (item.Teacher != null)
                            {
                                teacherName = Helper.GetUserFullName(item.Teacher.ApplicationUserId);
                            }
                        }
                        <td>@teacherName</td>
                        <td>@item.Classroom.Campus / @item.Classroom.Number</td>
                        <td></td>
                    </tr>
                    }
                </table>
            }*@
    </div>
    <div class="form-horizontal">
        <div class="form-group">
            @Html.HiddenFor(x => x.ClassIsAvailable, new { id = "classIsAvailableField"})
            @Html.HiddenFor(x => x.SelectedClassId, new { id = "selectedClassIdField"})

            @Html.LabelFor(x => x.Term, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-10">
                @Html.EnumDropDownListFor(x => x.Term, new { id = "assignCourseTermInput", @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.InstructorId, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-10">
                @Html.DropDownListFor(x => x.InstructorId, FieldInputHelpers.GetInstructors(),  
               new { id = "assignCourseInstructorInput", @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                @Html.Label("", "Class Dates", new { @class = "col-lg-2 control-label" })
                <div class="col-lg-5">
                    <div class="multiDatePicker">
                    </div>
                    <p class="text-info">Please select multiple dates for the scheduled classes</p>
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(x => x.StartTime, new { @class = "control-label" })
                    <div class="input-group timePicker">
                        @Html.TextBoxFor(x => x.StartTime,
                        new { id = "startTimeInput", Value = DateTime.Now.ToString("H:mm"), @class = "form-control" })
                        <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                    </div>
                    @Html.LabelFor(x => x.EndTime, new { @class = "control-label" })
                    <div class="input-group timePicker">
                        @Html.TextBoxFor(x => x.EndTime,
                        new { id = "endTimeInput", Value = DateTime.Now.AddHours(3).ToString("H:mm"), @class = "form-control" })
                        <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.ClassroomCourseId, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-4">
                <div class="input-group">
                    @Html.DropDownListFor(x => x.ClassroomCourseId, FieldInputHelpers.GetClassrooms(),
                    new { id = "assignCourseClassroomInput", @class = "form-control input-group" })
                    <span id="classAvailableSpan" class="input-group-addon" style="display: none"><i class="glyphicon glyphicon-ok"></i></span>
                    <span id="classNotAvailableSpan" class="input-group-addon" style="display: none"><i class="glyphicon glyphicon-ban-circle"></i></span>
                </div>
                <div>
                    <button type="button" class="btn btn-outline-primary" onclick="checkClassroomAvailability()">Check Availability</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-success" data-dismiss="modal" onclick='assignSemesterCourse("@Model.Course.Id")'>Save</button>
        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
    </div>
</div>

<script type="text/javascript">

    $(function () {
        // Time only picker.
        $('.timePicker').datetimepicker({
            format: 'HH:mm'
        });

        // Multi Date Picker
        $(".multiDatePicker").multiDatesPicker();
    });
</script>