@model StudentInfo.WebClient.Models.CourseSearchModel
@using StudentInfo.WebClient.Helpers
@using PagedList.Mvc

@{
  ViewBag.Title = "My Courses";
}

<!-- Course Search form -->
<div class="well">
    <p><h4>Course Search</h4></p>

    @using (Html.BeginForm("StudentCourses", "Course", FormMethod.Get))
    {
        <div class="form-group row">
            <div class="col-md-2">
                @Html.LabelFor(x => x.Code)
                @Html.TextBoxFor(x => x.Code, new { @class = "form-control" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(x => x.Keyword)
                @Html.TextBoxFor(x => x.Keyword, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-4">
                @Html.LabelFor(x => x.Semester)
                @Html.EnumDropDownListFor(x => x.Semester, new { @class = "form-control" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(x => x.FacultyId)
                @Html.DropDownListFor(x => x.FacultyId, FieldInputHelpers.GetSchoolFaculties(), new { id = "facultySelector", @class = "form-control", onchange = "updateDepartments()" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(x => x.DepartmentId)
                @Html.DropDownListFor(x => x.DepartmentId, new List<SelectListItem>(), new { id = "departmentSelector", @class = "form-control" })
            </div>
        </div>
            <div>
                <button type="submit" class="btn btn-primary">
                    <span class="glyphicon glyphicon-search"></span> Search
                </button>
            </div>
    }
</div>

@if (Model.StudentCourses == null || Model.StudentCourses.Count == 0)
{
    @Html.Label("Empty", "No results.")
}
else
{
    <!-- Search Results table -->
    <table class="table">
        <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Term</th>
            <th>State</th>
            <th>Grade</th>
            <th></th>
        </tr>
        @if (Model.StudentCourses != null)
        {
            foreach (var item in Model.StudentCourses)
            {
                var trId = "tr_item" + item.Id;
                <tr id=@trId>
                    <td>
                        @Html.DisplayFor(x => item.SemesterCourse.Course.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(x => item.SemesterCourse.Course.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(x => item.SemesterCourse.Term) - @item.CreateDate.Year
                    </td>
                    <td>
                        @Html.DisplayFor(x => item.CourseState)
                    </td>
                    <td>
                        @(item.Grade ?? "N/A")
                    </td>
                    <td>
                        <button class="btn btn-primary" onclick='dropCourse("@item.Id")'>
                            <span class="glyphicon glyphicon-remove"></span> Drop
                        </button>

                        <button class="btn btn-primary" onclick='loadStudentCourseDetails("@item.Id")'>
                            <span class="glyphicon glyphicon-file"></span> Details
                        </button>
                    </td>
                </tr>
            }
        }
        <tr></tr>
    </table>

    if (Model.Results != null)
    {
        @: Page @(Model.Results.PageCount < Model.Results.PageNumber ? 0 : Model.Results.PageNumber) of @Model.Results.PageCount
        @Html.PagedListPager(Model.Results, page => Url.Action("StudentCourses", new { page, model = Model }))
    }
}

<!-- Course Details Modal -->
<div id="studentCourseDetailsModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div id="studentCourseDetailsModalBody" class="modal-content">

        </div>
    </div>
</div>

<!-- Course Edit Modal -->
<div id="courseEditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div id="courseEditModalBody" class="modal-content">

        </div>
    </div>
</div>