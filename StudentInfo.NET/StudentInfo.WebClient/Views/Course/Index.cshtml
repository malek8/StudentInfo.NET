@model PagedList.IPagedList<StudentInfo.Users.Dto.Course>
@using PagedList.Mvc
@{
    ViewBag.Title = "Courses";
}
<script type="text/javascript">
    function loadCourseDetails(courseId, allowEdit) {
        $.get('/Course/Details?id=' + courseId + '&allowEdit=' + allowEdit, function (data) {
            $('#courseDetailsModalBody').html(data);
            $('#courseDetailsModal').modal('show');
        })
    }

    function showValidationIssues(isShown) {
        if (isShown) {
            $("#errorContainer").show();
        }
        else {
            $("#errorContainer").hide();
        }
    }

    function fillValidationErrors(errors) {
        $("#errors").html("");

        var errorsList = document.createElement('ul');

        for (var i = 0; i < errors.length; i++) {
            var item = document.createElement('li');
            item.appendChild(document.createTextNode(errors[i]));
            errorsList.appendChild(item);
        }

        $("#errors").html(errorsList);
    }

    function processResult(data) {
        if (data.success) {
            showValidationIssues(false);
            $('#courseDetailsModal').modal('hide');
        }
        else {
            fillValidationErrors(data);
            showValidationIssues(true);
        }
    }
</script>

<h2>Courses</h2>
@Html.Partial("Search", new StudentInfo.WebClient.Models.CourseSearchModel())
<table class="table">
    <tr>
        <th>Code</th>
        <th>Name</th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(x => item.Code)
            </td>
            <td>
                @Html.DisplayFor(x => item.Name)
            </td>
            <td>
                @if (User.IsInRole(StudentInfo.Enums.SystemRoles.Administrator))
                {
                    <button class="btn btn-primary" onclick='loadCourseDetails("@item.Id", true)'>
                        <span class="glyphicon glyphicon-pencil"></span> Edit
                    </button>
                }
                <button class="btn btn-primary" onclick='loadCourseDetails("@item.Id", false)'>
                    <span class="glyphicon glyphicon-plus"></span> Add
                </button>
                <button class="btn btn-primary" onclick='loadCourseDetails("@item.Id", false)'>
                    <span class="glyphicon glyphicon-file"></span> Details
                </button>
            </td>
        </tr>
    }
    <tr></tr>
</table>
<br />

<div id="courseDetailsModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div id="courseDetailsModalBody" class="modal-content">
            
        </div>
    </div>
</div>

<div id="courseEditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div id="courseEditModalBody" class="modal-content">

        </div>
    </div>
</div>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))



