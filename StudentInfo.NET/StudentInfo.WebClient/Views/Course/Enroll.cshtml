@model StudentInfo.WebClient.Models.CourseSearchModel
@using StudentInfo.WebClient.Helpers
@using PagedList.Mvc

@{
    ViewBag.Title = "Enroll";
}

<div class="well">
    <p><h4>Course Search</h4></p>
    <div class="form-inline" role="form">
        @using (Html.BeginForm("SearchCourses", "Course", FormMethod.Get))
        {
            <div class="form-group">
                @Html.LabelFor(x => x.Keyword, new { @class = "control-label" })
                <div>
                    @Html.TextBoxFor(x => x.Keyword, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.FacultyId, new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(x => x.FacultyId, FieldInputHelpers.GetSchoolFaculties(),
                   new { id = "facultySelector", @class = "form-control", onchange = "updateDepartments()" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.DepartmentId, new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(x => x.DepartmentId, new List<SelectListItem>(),
                   new { id = "departmentSelector", @class = "form-control" })
                </div>
            </div>

            <button type="submit" class="btn btn-primary">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>
        }
    </div>
</div>

<table class="table">
    <tr>
        <th>Code</th>
        <th>Name</th>
        <th></th>
    </tr>
    @if (Model.Results != null)
    {
        foreach (var item in Model.Results)
        {
            <tr>
                <td>
                    @Html.DisplayFor(x => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(x => item.Name)
                </td>
                <td>
                    @if (User.IsInRole(StudentInfo.Enums.SystemRoles.Administrator))
                    {
                        <button class="btn btn-primary" onclick='loadCourseDetails("@item.Id", true)'>
                            <span class="glyphicon glyphicon-pencil"></span> Edit
                        </button>
                    }
                    <button class="btn btn-primary" onclick='loadCourseDetails("@item.Id", false)'>
                        <span class="glyphicon glyphicon-plus"></span> Add
                    </button>
                    <button class="btn btn-primary" onclick='loadCourseDetails("@item.Id", false)'>
                        <span class="glyphicon glyphicon-file"></span> Details
                    </button>
                </td>
            </tr>
        }
    }
    <tr></tr>
</table>

@if (Model.Results != null)
{
    @: Page @(Model.Results.PageCount < Model.Results.PageNumber ? 0 : Model.Results.PageNumber) of @Model.Results.PageCount


    @Html.PagedListPager(Model.Results, page => Url.Action("SearchCourses",
    new {
        Code = Model.Code,
        Keyword = Model.Keyword,
        DepartmentId = Model.DepartmentId,
        FacultyId = Model.FacultyId,
        StudentId = Model.StudentId,
        Semester = Model.Semester,
        page
    }))
}

<div id="courseDetailsModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div id="courseDetailsModalBody" class="modal-content">

        </div>
    </div>
</div>

<div id="courseEditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div id="courseEditModalBody" class="modal-content">

        </div>
    </div>
</div>